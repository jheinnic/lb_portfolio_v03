// Generated by CoffeeScript 1.9.2
(function() {
  var Foo, f,
    bind = function(fn, me){ return function(){ return fn.apply(me, arguments); }; };

  Foo = (function() {
    function Foo() {
      this.seeTwo = bind(this.seeTwo, this);
      var a;
      a = 2;
      this.b = 2;
      this.prototype = {
        d: 2,
        e: 2
      };
      this.prototype.c = 2;
    }

    Foo.prototype.seeOne = function() {
      return console.log("a: 'NO', b: " + (this.b || 'NO') + ", c: " + (this.prototype.c || 'NO') + ", d: 'NO', e: " + (this.e || 'NO'));
    };

    Foo.prototype.seeTwo = function() {
      return console.log("a: " + (a || 'NO') + ", b: " + (this.b || 'NO') + ", c: " + (this.prototype.c || 'NO') + ", d: " + (d || 'NO') + ", e: " + (this.e || 'NO'));
    };

    Foo.seeThree = function() {
      return console.log("a: " + 'NO' + ", b: " + (this.b || 'NO') + ", c: " + (this.prototype.c || 'NO') + ", d: " + (d || 'NO') + ", e: " + (this.e || 'NO'));
    };

    Foo.seeFour = function() {
      return console.log("a: " + (a || 'NO') + ", b: " + (Foo.b || 'NO') + ", c: " + (Foo.prototype.c || 'NO') + ", d: " + (d || 'NO') + ", e: " + (Foo.e || 'NO'));
    };

    return Foo;

  })();

  exports.Foo = Foo;

  f = new Foo();

  f.seeOne();

  f.seeTwo();

  Foo.seeThree();

  Foo.seeFour();

}).call(this);
